#note this is inoperable; seeking resolution
variables:
 DOCKER_DRIVER: overlay
 IMAGE_NAME: “gilabregistry/user/tropicalhosting”
build:
 image: docker:latest
 services:
 — docker:dind
 stage: build
 cache:
 key: “builder”
 paths:
 — ./.build
 script:
 — docker version
 — docker build — pull -t “$IMAGE_NAME:${CI_BUILD_REF_NAME}_${CI_BUILD_REF}” .
 — docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN gitlabregistry
 — docker push “$IMAGE_NAME:${CI_BUILD_REF_NAME}_${CI_BUILD_REF}”
k8s-deploy-Dev:
 image: lwolf/kubectl_deployer:latest
 services:
 — docker:dind
 stage: deploy
 script:
 — kubectl config set-cluster my-cluster — server=”$K8S_URL” — insecure-skip-tls-verify=true
 — kubectl config set-credentials admin — token=”$K8S_TOKEN”
 — kubectl config set-context default-context — cluster=my-cluster — user=admin
 — kubectl config use-context default-context
 — kubectl get cs
 — /bin/sh deploy.sh ${CI_BUILD_REF_NAME}_${CI_BUILD_REF} dev dev.tropicalhosting.com
 environment:
 name: dev
 url: https://dev.tropicalhosting.com
 only:
 — dev
k8s-deploy-Prod:
 image: lwolf/kubectl_deployer:latest
 services:
 — docker:dind
 stage: deploy
 script:
 — kubectl config set-cluster my-cluster — server=”$K8S_URL” — insecure-skip-tls-verify=true
 — kubectl config set-credentials admin — token=”$K8S_TOKEN”
 — kubectl config set-context default-context — cluster=my-cluster — user=admin
 — kubectl config use-context default-context
 — kubectl get cs
 — /bin/sh deploy.sh ${CI_BUILD_REF_NAME}_${CI_BUILD_REF} default tropicalhosting.com
 environment:
 name: production
 url: https://tropicalhosting.com
 only:
 — master
